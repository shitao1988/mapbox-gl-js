{
  "$version": 8,
  "$root": {
    "version": {
      "required": true,
      "type": "enum",
      "values": [8],
      "doc": "样式规范版本号。 必须为 8。",
      "example": 8
    },
    "name": {
      "type": "string",
      "doc": "样式名称.",
      "example": "Bright"
    },
    "metadata": {
      "type": "*",
      "doc": "关于样式表的任意属性信息，但不对渲染过程产生影响。这些属性应该添加前缀以避免冲突，例如 'mapbox:'。"
    },
    "center": {
      "type": "array",
      "value": "number",
      "doc": "地图默认的中心经度和纬度。这个中心点只有在地图没有被其他方法定位时（例如地图设置或用户交互）才生效。",
      "example": [-73.9749, 40.7736]
    },
    "zoom": {
      "type": "number",
      "doc": "默认缩放级别。这个缩放级别只有在地图没有被其他方法定位时（例如地图设置或用户交互）才生效。",
      "example": 12.5
    },
    "bearing": {
      "type": "number",
      "default": 0,
      "period": 360,
      "units": "degrees",
      "doc": "默认方位角，沿顺时针偏离真北方向的夹角。这个方位角只有在地图没有被其他方法定位时（例如地图设置或用户交互）才生效。",
      "example": 29
    },
    "pitch": {
      "type": "number",
      "default": 0,
      "units": "degrees",
      "doc": "默认倾斜角度。0 代表垂直于地面，即垂直俯视地图，更大的值例如 60 可以眺望到地平线。这个倾斜角度只有在地图没有被其他方法定位时（例如地图设置或用户交互）才生效。",
      "example": 50
    },
    "light": {
      "type": "light",
      "doc": "The global light source.",
      "example": {
        "anchor": "viewport",
        "color": "white",
        "intensity": 0.4
      }
    },
    "sources": {
      "required": true,
      "type": "sources",
      "doc": "数据源说明。",
      "example": {
        "mapbox-streets": {
          "type": "vector",
          "url": "mapbox://mapbox.mapbox-streets-v6"
        }
      }
    },
    "sprite": {
      "type": "string",
      "doc": "获取雪碧图及其元数据的基础 URL。扩展名后缀 `.png`、`.json`、以及缩放因子 `@2x.png` 会被自动添加。当有图层使用了 `background-pattern`、`fill-pattern`、`line-pattern`、或`icon-image` 属性时，此属性必须设置。",
      "example": "mapbox://sprites/mapbox/bright-v8"
    },
    "glyphs": {
      "type": "string",
      "doc": "获取以有向距离场编码的 PBF 字形文件的 URL 模板。URL 必须包含 `{fontstack}` 和 `{range}` 占位符。当有图层使用了 `text-field` 布局属性时，此属性必须设置。",
      "example": "mapbox://fonts/mapbox/{fontstack}/{range}.pbf"
    },
    "transition": {
      "type": "transition",
      "doc": "全局的过渡动画属性，用来作为各种属性变化时的默认设置。",
      "example": {
        "duration": 300,
        "delay": 0
      }
    },
    "layers": {
      "required": true,
      "type": "array",
      "value": "layer",
      "doc": "图层将按照此数组依次绘制。",
      "example": [
        {
          "id": "water",
          "source": "mapbox-streets",
          "source-layer": "water",
          "type": "fill",
          "paint": {
            "fill-color": "#00ffff"
          }
        }
      ]
    }
  },
  "sources": {
    "*": {
      "type": "source",
      "doc": "数据源说明。对于矢量和栅格数据源，必须提供 TileJSON 或者指向 TileJSON 的 URL。对于图片和视频数据源，必须提供 URL。对于 GeoJSON 数据源，必须提供 URL 或内联的 GeoJSON。"
    }
  },
  "source": [
    "source_vector",
    "source_raster",
    "source_raster_dem",
    "source_geojson",
    "source_video",
    "source_image"
  ],
  "source_vector": {
    "type": {
      "required": true,
      "type": "enum",
      "values": {
        "vector": {
          "doc": "A vector tile source."
        }
      },
      "doc": "The type of the source."
    },
    "url": {
      "type": "string",
      "doc": "A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`."
    },
    "tiles": {
      "type": "array",
      "value": "string",
      "doc": "An array of one or more tile source URLs, as in the TileJSON spec."
    },
    "bounds": {
      "type": "array",
      "value": "number",
      "length": 4,
      "default": [-180, -85.051129, 180, 85.051129],
      "doc": "An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL."
    },
    "scheme": {
      "type": "enum",
      "values": {
        "xyz": {
          "doc": "Slippy map tilenames scheme."
        },
        "tms": {
          "doc": "OSGeo spec scheme."
        }
      },
      "default": "xyz",
      "doc": "Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed."
    },
    "minzoom": {
      "type": "number",
      "default": 0,
      "doc": "Minimum zoom level for which tiles are available, as in the TileJSON spec."
    },
    "maxzoom": {
      "type": "number",
      "default": 22,
      "doc": "Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels."
    },
    "attribution": {
      "type": "string",
      "doc": "Contains an attribution to be displayed when the map is shown to a user."
    },
    "promoteId": {
      "type": "promoteId",
      "doc": "A property to use as a feature id (for feature state). Either a property name, or an object of the form `{<sourceLayer>: <propertyName>}`. If specified as a string for a vector tile source, the same property is used across all its source layers."
    },
    "zoomOffset": {
      "type": "number",
      "default": 0,
      "doc": "The zoom number used in tile URLs will be offset with this value."
    },
    "*": {
      "type": "*",
      "doc": "Other keys to configure the data source."
    }
  },
  "source_raster": {
    "type": {
      "required": true,
      "type": "enum",
      "values": {
        "raster": {
          "doc": "A raster tile source."
        }
      },
      "doc": "瓦片数据源的类型。"
    },
    "url": {
      "type": "string",
      "doc": "指向 TileJSON 的 URL。支持的协议有 `http:`、`https:`、 以及 `mapbox://<mapid>`。"
    },
    "tiles": {
      "type": "array",
      "value": "string",
      "doc": "包含一个或多个瓦片数据源的 URL，见 TileJSON 规范"
    },
    "bounds": {
      "type": "array",
      "value": "number",
      "length": 4,
      "default": [-180, -85.051129, 180, 85.051129],
      "doc": "An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL."
    },
    "minzoom": {
      "type": "number",
      "default": 0,
      "doc": "瓦片源的最小缩放级别，见 TileJSON 规范。"
    },
    "maxzoom": {
      "type": "number",
      "default": 22,
      "doc": "瓦片源的最大缩放级别，见 TileJSON 规范。当显示更高缩放级别的地图时，会使用此级别的数据。"
    },
    "tileSize": {
      "type": "number",
      "default": 512,
      "units": "pixels",
      "doc": "图层中显示瓦片的最小尺寸。仅对栅格图层有效"
    },
    "scheme": {
      "type": "enum",
      "values": {
        "xyz": {
          "doc": "Slippy map tilenames scheme."
        },
        "tms": {
          "doc": "OSGeo spec scheme."
        }
      },
      "default": "xyz",
      "doc": "Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed."
    },
    "attribution": {
      "type": "string",
      "doc": "Contains an attribution to be displayed when the map is shown to a user."
    },
    "zoomOffset": {
      "type": "number",
      "default": 0,
      "doc": "The zoom number used in tile URLs will be offset with this value."
    },
    "*": {
      "type": "*",
      "doc": "其他数据源相关设置项。"
    }
  },
  "source_raster_dem": {
    "type": {
      "required": true,
      "type": "enum",
      "values": {
        "raster-dem": {
          "doc": "A RGB-encoded raster DEM source"
        }
      },
      "doc": "The type of the source."
    },
    "url": {
      "type": "string",
      "doc": "A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`."
    },
    "tiles": {
      "type": "array",
      "value": "string",
      "doc": "An array of one or more tile source URLs, as in the TileJSON spec."
    },
    "bounds": {
      "type": "array",
      "value": "number",
      "length": 4,
      "default": [-180, -85.051129, 180, 85.051129],
      "doc": "An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL."
    },
    "minzoom": {
      "type": "number",
      "default": 0,
      "doc": "Minimum zoom level for which tiles are available, as in the TileJSON spec."
    },
    "maxzoom": {
      "type": "number",
      "default": 22,
      "doc": "Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels."
    },
    "tileSize": {
      "type": "number",
      "default": 512,
      "units": "pixels",
      "doc": "The minimum visual size to display tiles for this layer. Only configurable for raster layers."
    },
    "attribution": {
      "type": "string",
      "doc": "Contains an attribution to be displayed when the map is shown to a user."
    },
    "encoding": {
      "type": "enum",
      "values": {
        "terrarium": {
          "doc": "Terrarium format PNG tiles. See https://aws.amazon.com/es/public-datasets/terrain/ for more info."
        },
        "mapbox": {
          "doc": "Mapbox Terrain RGB tiles. See https://www.mapbox.com/help/access-elevation-data/#mapbox-terrain-rgb for more info."
        }
      },
      "default": "mapbox",
      "doc": "The encoding used by this source. Mapbox Terrain RGB is used by default"
    },
    "zoomOffset": {
      "type": "number",
      "default": 0,
      "doc": "The zoom number used in tile URLs will be offset with this value."
    },
    "*": {
      "type": "*",
      "doc": "Other keys to configure the data source."
    }
  },
  "source_geojson": {
    "type": {
      "required": true,
      "type": "enum",
      "values": {
        "geojson": {
            "doc": "GeoJSON 数据源。"
        }
      },
      "doc": "GeoJSON 数据源的数据类型。"
    },
    "data": {
      "type": "*",
      "doc": "链接到 GeoJSON 文件的 URL，或者内联的 GeoJSON。"
    },
    "maxzoom": {
      "type": "number",
      "default": 18,
      "doc": "Maximum zoom level at which to create vector tiles (higher means greater detail at high zoom levels)."
    },
    "attribution": {
      "type": "string",
      "doc": "Contains an attribution to be displayed when the map is shown to a user."
    },
    "crs": {
      "type": "string",
      "default": "EPSG:3857",
      "doc": "crs"
    },
    "buffer": {
      "type": "number",
      "default": 128,
      "maximum": 512,
      "minimum": 0,
      "doc": "瓦片边界上的缓冲区大小。0 表示无缓冲区。512 表示缓冲区与瓦片本身一样宽。值越大在瓦片边缘上生成的符号冲突越少，但是意味着性能降低。"
    },
    "tolerance": {
      "type": "number",
      "default": 0.375,
      "doc": "Douglas-Peucker 化简容差（值越大，几何要素化简程度越高，渲染性能也更好）。"
    },
    "cluster": {
      "type": "boolean",
      "default": false,
      "doc": "如果数据是点数据集，设置 true 将会按照聚类半径进行聚类。"
    },
    "clusterRadius": {
      "type": "number",
      "default": 50,
      "minimum": 0,
      "doc": "聚类半径。512 表示聚类半径等于瓦片宽度。"
    },
    "clusterMaxZoom": {
      "type": "number",
      "doc": "Max zoom on which to cluster points if clustering is enabled. Defaults to one zoom less than maxzoom (so that last zoom features are not clustered)."
    },
    "clusterProperties": {
      "type": "*",
      "doc": "An object defining custom properties on the generated clusters if clustering is enabled, aggregating values from clustered points. Has the form `{\"property_name\": [operator, map_expression]}`. `operator` is any expression function that accepts at least 2 operands (e.g. `\"+\"` or `\"max\"`) — it accumulates the property value from clusters/points the cluster contains; `map_expression` produces the value of a single point.\n\nExample: `{\"sum\": [\"+\", [\"get\", \"scalerank\"]]}`.\n\nFor more advanced use cases, in place of `operator`, you can use a custom reduce expression that references a special `[\"accumulated\"]` value, e.g.:\n`{\"sum\": [[\"+\", [\"accumulated\"], [\"get\", \"sum\"]], [\"get\", \"scalerank\"]]}`"
    },
    "lineMetrics": {
      "type": "boolean",
      "default": false,
      "doc": "Whether to calculate line distance metrics. This is required for line layers that specify `line-gradient` values."
    },
    "generateId": {
      "type": "boolean",
      "default": false,
      "doc": "Whether to generate ids for the geojson features. When enabled, the `feature.id` property will be auto assigned based on its index in the `features` array, over-writing any previous values."
    },
    "promoteId": {
      "type": "promoteId",
      "doc": "A property to use as a feature id (for feature state). Either a property name, or an object of the form `{<sourceLayer>: <propertyName>}`."
    }
  },
  "source_video": {
    "type": {
      "required": true,
      "type": "enum",
      "values": {
        "video": {
            "doc": "视频数据源。"
        }
      },
      "doc": "视频数据源的数据类型。"
    },
    "urls": {
      "required": true,
      "type": "array",
      "value": "string",
      "doc": "指向视频内容的URL，按照格式优先级排列。"
    },
    "coordinates": {
      "required": true,
      "doc": "视频的四角的经纬度坐标。",
      "type": "array",
      "length": 4,
      "value": {
        "type": "array",
        "length": 2,
        "value": "number",
        "doc": "单个经纬度坐标对。"
      }
    }
  },
  "source_image": {
    "type": {
      "required": true,
      "type": "enum",
      "values": {
        "image": {
            "doc": "图片数据源。"
        }
      },
      "doc": "图片数据源的数据类型。"
    },
    "url": {
      "required": true,
      "type": "string",
      "doc": "指向图片的 URL。"
    },
    "coordinates": {
      "required": true,
      "doc": "图片的四角的经纬度坐标。",
      "type": "array",
      "length": 4,
      "value": {
        "type": "array",
        "length": 2,
        "value": "number",
        "doc": "单个经纬度坐标对。"
      }
    }
  },
  "layer": {
    "id": {
      "type": "string",
      "doc": "全局唯一的图层名称。",
      "required": true
    },
    "type": {
      "type": "enum",
      "values": {
        "fill": {
          "doc": "可填充的多边形，可带描边。",
          "sdk-support": {
            "basic functionality": {
              "js": "0.10.0",
              "android": "2.0.1",
              "ios": "2.0.0",
              "macos": "0.1.0"
            }
          }
        },
        "line": {
          "doc": "绘制线",
          "sdk-support": {
            "basic functionality": {
              "js": "0.10.0",
              "android": "2.0.1",
              "ios": "2.0.0",
              "macos": "0.1.0"
            }
          }
        },
        "symbol": {
          "doc": "图标或者文本标注",
          "sdk-support": {
            "basic functionality": {
              "js": "0.10.0",
              "android": "2.0.1",
              "ios": "2.0.0",
              "macos": "0.1.0"
            }
          }
        },
        "circle": {
          "doc": "可填充的圆。",
          "sdk-support": {
            "basic functionality": {
              "js": "0.10.0",
              "android": "2.0.1",
              "ios": "2.0.0",
              "macos": "0.1.0"
            }
          }
        },
        "heatmap": {
          "doc": "A heatmap.",
          "sdk-support": {
            "basic functionality": {
              "js": "0.41.0",
              "android": "6.0.0",
              "ios": "4.0.0",
              "macos": "0.7.0"
            }
          }
        },
        "fill-extrusion": {
          "doc": "An extruded (3D) polygon.",
          "sdk-support": {
            "basic functionality": {
              "js": "0.27.0",
              "android": "5.1.0",
              "ios": "3.6.0",
              "macos": "0.5.0"
            }
          }
        },
        "raster": {
          "doc": "栅格地图例如卫星影像",
          "sdk-support": {
            "basic functionality": {
              "js": "0.10.0",
              "android": "2.0.1",
              "ios": "2.0.0",
              "macos": "0.1.0"
            }
          }
        },
        "hillshade": {
          "doc": "Client-side hillshading visualization based on DEM data. Currently, the implementation only supports Mapbox Terrain RGB and Mapzen Terrarium tiles.",
          "sdk-support": {
            "basic functionality": {
              "js": "0.43.0",
              "android": "6.0.0",
              "ios": "4.0.0",
              "macos": "0.7.0"
            }
          }
        },
        "background": {
          "doc": "地图的背景色或者填充图案",
          "sdk-support": {
            "basic functionality": {
              "js": "0.10.0",
              "android": "2.0.1",
              "ios": "2.0.0",
              "macos": "0.1.0"
            }
          }
        }
      },
      "doc": "图层的渲染类型。",
      "required": true
    },
    "metadata": {
      "type": "*",
      "doc": "关于图层的任意属性信息，但不对渲染过程产生影响。这些属性应该添加前缀以避免冲突，例如 'mapbox:'。"
    },
    "source": {
      "type": "string",
      "doc": "图层的数据源。"
    },
    "source-layer": {
      "type": "string",
      "doc": "矢量瓦片数据源的图层。当数据源支持多个图层时，此属性是必需的。"
    },
    "minzoom": {
      "type": "number",
      "minimum": 0,
      "maximum": 24,
      "doc": "图层进行解析并显示的最小缩放级别。"
    },
    "maxzoom": {
      "type": "number",
      "minimum": 0,
      "maximum": 24,
      "doc": "图层进行解析并显示的最大缩放级别。"
    },
    "filter": {
      "type": "filter",
      "doc": "指明数据源上要素的过滤条件的表达式。只有符合过滤条件的要素才被显示。"
    },
    "layout": {
      "type": "layout",
      "doc": "图层的布局属性。"
    },
    "paint": {
      "type": "paint",
      "doc": "图层的默认绘制属性。"
    }
  },
  "layout": [
    "layout_fill",
    "layout_line",
    "layout_circle",
    "layout_heatmap",
    "layout_fill-extrusion",
    "layout_symbol",
    "layout_raster",
    "layout_hillshade",
    "layout_background"
  ],
  "layout_background": {
    "visibility": {
      "type": "enum",
      "function": "piecewise-constant",
      "zoom-function": true,
      "values": {
        "visible": {
            "doc": "显示此图层。"
        },
        "none": {
            "doc": "不显示此图层。"
        }
      },
      "default": "visible",
      "doc": "是否显示此图层。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_fill": {
    "fill-sort-key": {
      "type": "number",
      "doc": "Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.",
      "sdk-support": {
        "basic functionality": {
          "js": "1.2.0",
          "android": "9.1.0",
          "ios": "5.8.0",
          "macos": "0.15.0"
        },
        "data-driven styling": {
          "js": "1.2.0",
          "android": "9.1.0",
          "ios": "5.8.0",
          "macos": "0.15.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "visibility": {
      "type": "enum",
      "function": "piecewise-constant",
      "zoom-function": true,
      "values": {
        "visible": {
            "doc": "显示此图层。"
        },
        "none": {
            "doc": "不显示此图层。"
        }
      },
      "default": "visible",
      "doc": "是否显示此图层。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_circle": {
    "circle-sort-key": {
      "type": "number",
      "doc": "Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.",
      "sdk-support": {
        "basic functionality": {
          "js": "1.2.0",
          "android": "9.2.0",
          "ios": "5.9.0",
          "macos": "0.16.0"
        },
        "data-driven styling": {
          "js": "1.2.0",
          "android": "9.2.0",
          "ios": "5.9.0",
          "macos": "0.16.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "visibility": {
      "type": "enum",
      "function": "piecewise-constant",
      "zoom-function": true,
      "values": {
        "visible": {
            "doc": "显示此图层。"
        },
        "none": {
            "doc": "不显示此图层。"
        }
      },
      "default": "visible",
      "doc": "是否显示此图层。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_heatmap": {
    "visibility": {
      "type": "enum",
      "values": {
        "visible": {
          "doc": "The layer is shown."
        },
        "none": {
          "doc": "The layer is not shown."
        }
      },
      "default": "visible",
      "doc": "Whether this layer is displayed.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_fill-extrusion": {
    "visibility": {
      "type": "enum",
      "values": {
        "visible": {
          "doc": "The layer is shown."
        },
        "none": {
          "doc": "The layer is not shown."
        }
      },
      "default": "visible",
      "doc": "Whether this layer is displayed.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_line": {
    "line-cap": {
      "type": "enum",
      "function": "piecewise-constant",
      "zoom-function": true,
      "property-function": true,
      "values": {
        "butt": {
          "doc": "方型末端，仅绘制到直线端点。"
        },
        "round": {
          "doc": "圆型末端，以线宽的 1/2 为半径，以线端点为圆心，超出线端点绘制。"
        },
        "square": {
          "doc": "方型末端，以线宽的 1/2 长度超出线端点绘制。"
        }
      },
      "default": "butt",
      "doc": "线末端的显示样式。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "line-join": {
      "type": "enum",
      "function": "piecewise-constant",
      "zoom-function": true,
      "property-function": true,
      "values": {
        "bevel": {
          "doc": "方型交点，以线宽的 1/2 长度超出交点绘制。"
        },
        "round": {
          "doc": "圆型交点，以线宽的 1/2 为半径，以交点为圆心绘制，超出交点绘制。"
        },
        "miter": {
          "doc": "尖型交角，以两线段外沿相交，超出交点绘制。"
        }
      },
      "default": "miter",
      "doc": "The display of lines when joining.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.40.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "line-miter-limit": {
      "type": "number",
      "default": 2,
      "doc": "用来将锐利的尖型交角自动地转换为方型交角。",
      "requires": [
        {
          "line-join": "miter"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "line-round-limit": {
      "type": "number",
      "default": 1.05,

      "doc": "用来将平浅的圆型交角自动地转换为尖型交角。",
      "requires": [
        {
          "line-join": "round"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "line-sort-key": {
      "type": "number",
      "doc": "Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.",
      "sdk-support": {
        "basic functionality": {
          "js": "1.2.0",
          "android": "9.1.0",
          "ios": "5.8.0",
          "macos": "0.15.0"
        },
        "data-driven styling": {
          "js": "1.2.0",
          "android": "9.1.0",
          "ios": "5.8.0",
          "macos": "0.15.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "visibility": {
      "type": "enum",
      "function": "piecewise-constant",
      "zoom-function": true,
      "values": {
        "visible": {
            "doc": "显示此图层。"
        },
        "none": {
            "doc": "不显示此图层。"
        }
      },
      "default": "visible",
      "doc": "是否显示此图层。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_symbol": {
    "symbol-placement": {
      "type": "enum",
      "values": {
        "point": {
          "doc": "标注在几何要素的点位上"
        },
        "line": {
          "doc": "标注在几何要素的边线上。只能用在 `LineString` 和 `Polygon` 要素上"
        },
        "line-center": {
          "doc": "The label is placed at the center of the line of the geometry. Can only be used on `LineString` and `Polygon` geometries. Note that a single feature in a vector tile may contain multiple line geometries."
        }
      },
      "default": "point",
      "doc": "注记相对于几何要素的位置。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "`line-center` value": {
          "js": "0.47.0",
          "android": "6.4.0",
          "ios": "4.3.0",
          "macos": "0.10.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "symbol-spacing": {
      "type": "number",
      "default": 250,
      "minimum": 1,
      "units": "pixels",
      "doc": "两个注记锚点之间的距离",
      "requires": [
        {
          "symbol-placement": "line"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "symbol-avoid-edges": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，注记不会跨瓦片边缘，以避免相互冲突。当图层的矢量瓦片没有足够的缓冲区以避免冲突，或者一个点注记图层在一个线注记图层之上时，推荐开启此设置。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "symbol-sort-key": {
      "type": "number",
      "doc": "Sorts features in ascending order based on this value. Features with lower sort keys are drawn and placed first.  When `icon-allow-overlap` or `text-allow-overlap` is `false`, features with a lower sort key will have priority during placement. When `icon-allow-overlap` or `text-allow-overlap` is set to `true`, features with a higher sort key will overlap over features with a lower sort key.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.53.0",
          "android": "7.4.0",
          "ios": "4.11.0",
          "macos": "0.14.0"
        },
        "data-driven styling": {
          "js": "0.53.0",
          "android": "7.4.0",
          "ios": "4.11.0",
          "macos": "0.14.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "symbol-z-order": {
      "type": "enum",
      "values": {
        "auto": {
          "doc": "Sorts symbols by `symbol-sort-key` if set. Otherwise, sorts symbols by their y-position relative to the viewport if `icon-allow-overlap` or `text-allow-overlap` is set to `true` or `icon-ignore-placement` or `text-ignore-placement` is `false`."
        },
        "viewport-y": {
          "doc": "Sorts symbols by their y-position relative to the viewport if `icon-allow-overlap` or `text-allow-overlap` is set to `true` or `icon-ignore-placement` or `text-ignore-placement` is `false`."
        },
        "source": {
          "doc": "Sorts symbols by `symbol-sort-key` if set. Otherwise, no sorting is applied; symbols are rendered in the same order as the source data."
        }
      },
      "default": "auto",
      "doc": "Determines whether overlapping symbols in the same layer are rendered in the order that they appear in the data source or by their y-position relative to the viewport. To control the order and prioritization of symbols otherwise, use `symbol-sort-key`.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.49.0",
          "android": "6.6.0",
          "ios": "4.5.0",
          "macos": "0.12.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-allow-overlap": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，图标符号即使碰撞到其他绘制的注记也会显示。",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-ignore-placement": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，其他注记即使碰撞到此图标符号也会显示",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-optional": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，当此注记的图标与其他注记碰撞而文本未碰撞时，仅显示此注记的文本而不显示图标。",
      "requires": ["icon-image", "text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-rotation-alignment": {
      "type": "enum",
      "values": {
        "map": {
            "doc": "当 `symbol-placement` 设置为 `point` 时，将图标与东西方向对齐。当 `symbol-placement` 设置为 `line` 时，将图标的 x 轴与线对齐。"
        },
        "viewport": {
            "doc": "将图标的 x 轴与视窗的 x 轴对齐，无论 `symbol-placement` 设置为哪个值。"
        },
        "auto": {
            "doc": "当 `symbol-placement` 设置为 `point` 时，与 `viewport` 行为一致。当 `symbol-placement` 设置为 `line` 时，与 `map` 行为一致。"
        }
      },
      "default": "auto",
      "doc": "与 `symbol-placement` 组合使用，决定旋转时图标的行为。",
      "requires": [
        "icon-image"
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "`auto` value": {
          "js": "0.25.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.3.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-size": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "units": "factor of the original icon size",
      "doc": "图标的缩放因子。1 表示原始大小，3 表示三倍大小",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.35.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "icon-text-fit": {
      "type": "enum",
      "values": {
        "none": {
            "doc": "图标按其本身的比例进行显示。"
        },
        "width": {
            "doc": "图标在 x 轴进行缩放以匹配文本的宽度。"
        },
        "height": {
            "doc": "图标在 y 轴进行缩放以匹配文本的高度。"
        },
        "both": {
            "doc": "图标在 x 轴与 y 轴都进行缩放。"
        }
      },
      "default": "none",
      "doc": "缩放图标以与文本相匹配。",
      "requires": [
        "icon-image",
        "text-field"
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.21.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.2.1"
        },
        "stretchable icons": {
          "js": "1.6.0",
          "android": "9.2.0",
          "ios": "5.8.0",
          "macos": "0.15.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-text-fit-padding": {
      "type": "array",
      "value": "number",
      "length": 4,
      "default": [0, 0, 0, 0],
      "units": "pixels",
      "doc": "根据 `icon-text-fit` 确定的图标尺寸添加额外的间隔，以上-右-下-左的顺时针顺序设置。",
      "requires": [
        "icon-image",
        "text-field",
        {
          "icon-text-fit": ["both", "width", "height"]
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.21.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.2.1"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-image": {
      "type": "resolvedImage",
      "doc": "替换 {} 的字符串，引用拉取的图标资源。",
      "tokens": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.35.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "icon-rotate": {
      "type": "number",
      "default": 0,
      "period": 360,
      "units": "degrees",
      "doc": "Rotates the icon clockwise.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.21.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "icon-padding": {
      "type": "number",
      "default": 2,
      "minimum": 0,
      "units": "pixels",
      "doc": "包围在图标 bbox 外的额外空间，用以检测注记碰撞。",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-keep-upright": {
      "type": "boolean",
      "default": false,
      "doc": "如果设置为 true，图标可以被翻转以避免图标上下颠倒",
      "requires": [
        "icon-image",
        {
          "icon-rotation-alignment": "map"
        },
        {
          "symbol-placement": ["line", "line-center"]
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-offset": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "doc": "图标与其锚点的偏移量。正值表示向右和下偏移，负值表示向左和上偏移。",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "icon-anchor": {
      "type": "enum",
      "values": {
        "center": {
          "doc": "The center of the icon is placed closest to the anchor."
        },
        "left": {
          "doc": "The left side of the icon is placed closest to the anchor."
        },
        "right": {
          "doc": "The right side of the icon is placed closest to the anchor."
        },
        "top": {
          "doc": "The top of the icon is placed closest to the anchor."
        },
        "bottom": {
          "doc": "The bottom of the icon is placed closest to the anchor."
        },
        "top-left": {
          "doc": "The top left corner of the icon is placed closest to the anchor."
        },
        "top-right": {
          "doc": "The top right corner of the icon is placed closest to the anchor."
        },
        "bottom-left": {
          "doc": "The bottom left corner of the icon is placed closest to the anchor."
        },
        "bottom-right": {
          "doc": "The bottom right corner of the icon is placed closest to the anchor."
        }
      },
      "default": "center",
      "doc": "Part of the icon placed closest to the anchor.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.40.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        },
        "data-driven styling": {
          "js": "0.40.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "icon-pitch-alignment": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The icon is aligned to the plane of the map."
        },
        "viewport": {
          "doc": "The icon is aligned to the plane of the viewport."
        },
        "auto": {
          "doc": "Automatically matches the value of `icon-rotation-alignment`."
        }
      },
      "default": "auto",
      "doc": "Orientation of icon when map is pitched.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.39.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-pitch-alignment": {
      "type": "enum",
      "values": {
        "map": {
            "doc": "文本与地图平面对齐。"
        },
        "viewport": {
            "doc": "文本与视窗平面对齐。"
        },
        "auto": {
            "doc": "自动地与 `text-rotation-alignment` 设置相匹配。"
        }
      },
      "default": "auto",
      "doc": "当地图倾斜时文本的方向。",
      "requires": [
        "text-field"
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.21.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.2.1"
        },
        "`auto` value": {
          "js": "0.25.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.3.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-rotation-alignment": {
      "type": "enum",
      "values": {
        "map": {
            "doc": "当 `symbol-placement` 设置为 `point` 时，将文本与东西方向对齐。当 `symbol-placement` 设置为 `line` 时，将文本的 x 轴与线对齐。"
        },
        "viewport": {
            "doc": "将字型的 x 轴与视窗的 x 轴对齐，无论 `symbol-placement` 设置为哪个值。"
        },
        "auto": {
            "doc": "当 `symbol-placement` 设置为 `point` 时，与 `viewport` 行为一致。当 `symbol-placement` 设置为 `line` 时，与 `map` 行为一致。"
        }
      },
      "default": "auto",
      "doc": "与 `symbol-placement` 结合使用，确定构成文本的单个字型的旋转行为。",
      "requires": [
        "text-field"
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "`auto` value": {
          "js": "0.25.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.3.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-field": {
      "type": "formatted",
      "default": "",
      "tokens": true,
      "doc": "用来作为文本标注的字段。用 {field_name} 指示使用要素的哪个字段。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-font": {
      "type": "array",
      "value": "string",
      "default": ["Open Sans Regular", "Arial Unicode MS Regular"],
      "doc": "显示文本的字栈。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-size": {
      "type": "number",
      "default": 16,
      "minimum": 0,
      "units": "pixels",
      "doc": "字体大小",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.35.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-max-width": {
      "type": "number",
      "default": 10,
      "minimum": 0,
      "units": "ems",
      "doc": "文本折行的最大行度。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.40.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-line-height": {
      "type": "number",
      "default": 1.2,
      "units": "ems",
      "doc": "多行文本的行高",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-letter-spacing": {
      "type": "number",
      "default": 0,
      "units": "ems",
      "doc": "字符间距。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.40.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-justify": {
      "type": "enum",
      "values": {
        "auto": {
          "doc": "The text is aligned towards the anchor position."
        },
        "left": {
          "doc": "The text is aligned to the left."
        },
        "center": {
            "doc": "文本居中。"
        },
        "right": {
            "doc": "文本右对齐。"
        }
      },
      "default": "center",
      "doc": "文本对齐选项。",
      "requires": [
        "text-field"
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.39.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        },
        "auto": {
          "js": "0.54.0",
          "android": "7.4.0",
          "ios": "4.10.0",
          "macos": "0.14.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-radial-offset": {
      "type": "number",
      "units": "ems",
      "default": 0,
      "doc": "Radial offset of text, in the direction of the symbol's anchor. Useful in combination with `text-variable-anchor`, which defaults to using the two-dimensional `text-offset` if present.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.54.0",
          "android": "7.4.0",
          "ios": "4.10.0",
          "macos": "0.14.0"
        },
        "data-driven styling": {
          "js": "0.54.0",
          "android": "7.4.0",
          "ios": "4.10.0",
          "macos": "0.14.0"
        }
      },
      "requires": ["text-field"],
      "property-type": "data-driven",
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      }
    },
    "text-variable-anchor": {
      "type": "array",
      "value": "enum",
      "values": {
        "center": {
          "doc": "The center of the text is placed closest to the anchor."
        },
        "left": {
          "doc": "The left side of the text is placed closest to the anchor."
        },
        "right": {
          "doc": "The right side of the text is placed closest to the anchor."
        },
        "top": {
          "doc": "The top of the text is placed closest to the anchor."
        },
        "bottom": {
          "doc": "The bottom of the text is placed closest to the anchor."
        },
        "top-left": {
          "doc": "The top left corner of the text is placed closest to the anchor."
        },
        "top-right": {
          "doc": "The top right corner of the text is placed closest to the anchor."
        },
        "bottom-left": {
          "doc": "The bottom left corner of the text is placed closest to the anchor."
        },
        "bottom-right": {
          "doc": "The bottom right corner of the text is placed closest to the anchor."
        }
      },
      "requires": [
        "text-field",
        {
          "symbol-placement": ["point"]
        }
      ],
      "doc": "To increase the chance of placing high-priority labels on the map, you can provide an array of `text-anchor` locations: the renderer will attempt to place the label at each location, in order, before moving onto the next label. Use `text-justify: auto` to choose justification based on anchor position. To apply an offset, use the `text-radial-offset` or the two-dimensional `text-offset`.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.54.0",
          "android": "7.4.0",
          "ios": "4.10.0",
          "macos": "0.14.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-anchor": {
      "type": "enum",
      "values": {
        "center": {
            "doc": "文本中心停靠到锚点。"
        },
        "left": {
            "doc": "文本左边停靠到锚点。"
        },
        "right": {
            "doc": "文本右边停靠到锚点。"
        },
        "top": {
            "doc": "文本顶部停靠到锚点。"
        },
        "bottom": {
            "doc": "文本底部停靠到锚点。"
        },
        "top-left": {
            "doc": "文本的左上角停靠到锚点。"
        },
        "top-right": {
            "doc": "文本的右上角停靠到锚点。"
        },
        "bottom-left": {
            "doc": "文本的左下角停靠到锚点。"
        },
        "bottom-right": {
            "doc": "文本的右下角停靠到锚点。"
        }
      },
      "default": "center",
      "doc": "文本停靠到锚点的部分",
      "requires": [
        "text-field",
        {
          "!": "text-variable-anchor"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.39.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-max-angle": {
      "type": "number",
      "default": 45,
      "units": "degrees",
      "doc": "相邻字符的最大夹角。",
      "requires": [
        "text-field",
        {
          "symbol-placement": ["line", "line-center"]
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-writing-mode": {
      "type": "array",
      "value": "enum",
      "values": {
        "horizontal": {
          "doc": "If a text's language supports horizontal writing mode, symbols with point placement would be laid out horizontally."
        },
        "vertical": {
          "doc": "If a text's language supports vertical writing mode, symbols with point placement would be laid out vertically."
        }
      },
      "doc": "The property allows control over a symbol's orientation. Note that the property values act as a hint, so that a symbol whose language doesn’t support the provided orientation will be laid out in its natural orientation. Example: English point symbol will be rendered horizontally even if array value contains single 'vertical' enum value. The order of elements in an array define priority order for the placement of an orientation variant.",
      "requires": [
        "text-field",
        {
          "symbol-placement": ["point"]
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "1.3.0",
          "android": "8.3.0",
          "ios": "5.3.0",
          "macos": "0.15.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-rotate": {
      "type": "number",
      "default": 0,
      "period": 360,
      "units": "degrees",
      "doc": "顺时针旋转文本的角度。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.35.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-padding": {
      "type": "number",
      "default": 2,
      "minimum": 0,
      "units": "pixels",
      "doc": "文本框四周的额外空间，用以检测注记碰撞。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-keep-upright": {
      "type": "boolean",
      "default": true,
      "doc": "如果设置为 true，文本可以被翻转以避免图标上下颠倒。",
      "requires": [
        "text-field",
        {
          "text-rotation-alignment": "map"
        },
        {
          "symbol-placement": ["line", "line-center"]
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-transform": {
      "type": "enum",
      "values": {
        "none": {
            "doc": "文本保持不变。"
        },
        "uppercase": {
            "doc": "强制使所有的字符大写。"
        },
        "lowercase": {
            "doc": "强制使所有的字符小写。"
        }
      },
      "default": "none",
      "doc": "设置文本的大小写，类似于 CSS 的 `text-transform` 属性。",
      "requires": [
        "text-field"
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-offset": {
      "type": "array",
      "doc": "文本与其锚点的偏移量。正值表示向右和下偏移，负值表示向左和上偏移。",
      "value": "number",
      "units": "ems",
      "length": 2,
      "default": [0, 0],
      "requires": [
        "text-field",
        {
          "!": "text-radial-offset"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.35.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "data-driven"
    },
    "text-allow-overlap": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，文本标注即使碰撞到其他绘制的注记也会显示。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-ignore-placement": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，其他注记即使碰撞到此文本标注也会显示。",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-optional": {
      "type": "boolean",
      "default": false,
      "doc": "设置为 true 时，当此文本注记与其他注记碰撞而图标未碰撞时，仅显示此注记的图标而不显示文本。",
      "requires": ["text-field", "icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "visibility": {
      "type": "enum",
      "values": {
        "visible": {
            "doc": "显示此图层。"
        },
        "none": {
            "doc": "不显示此图层。"
        }
      },
      "default": "visible",
      "doc": "是否显示此图层。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_raster": {
    "visibility": {
      "type": "enum",
      "values": {
        "visible": {
            "doc": "显示此图层。"
        },
        "none": {
            "doc": "不显示此图层。"
        }
      },
      "default": "visible",
      "doc": "是否显示此图层。",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "property-type": "constant"
    }
  },
  "layout_hillshade": {
    "visibility": {
      "type": "enum",
      "values": {
        "visible": {
          "doc": "The layer is shown."
        },
        "none": {
          "doc": "The layer is not shown."
        }
      },
      "default": "visible",
      "doc": "Whether this layer is displayed.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "property-type": "constant"
    }
  },
  "filter": {
    "type": "array",
    "value": "*",
    "doc": "从数据图层中选择特定要素的过滤器。"
  },
  "filter_operator": {
    "type": "enum",
    "values": {
      "==": {
          "doc": "`[\"==\", key, value]` 相等：`feature[key] = value`"
      },
      "!=": {
          "doc": "`[\"!=\", key, value]` 不相等：`feature[key] ≠ value`"
      },
      ">": {
          "doc": "`[\">\", key, value]` 大于：`feature[key] > value`"
      },
      ">=": {
          "doc": "`[\">=\", key, value]` 大于等于：`feature[key] ≥ value`"
      },
      "<": {
          "doc": "`[\"<\", key, value]` 小于：`feature[key] < value`"
      },
      "<=": {
          "doc": "`[\"<=\", key, value]` 小于等于：`feature[key] ≤ value`"
      },
      "in": {
          "doc": "`[\"in\", key, v0, ..., vn]` 包含：`feature[key] ∈ {v0, ..., vn}`"
      },
      "!in": {
          "doc": "`[\"!in\", key, v0, ..., vn]` 不包含：`feature[key] ∉ {v0, ..., vn}`"
      },
      "all": {
          "doc": "`[\"all\", f0, ..., fn]` 逻辑与 `AND`：`f0 ∧ ... ∧ fn`"
      },
      "any": {
          "doc": "`[\"any\", f0, ..., fn]` 逻辑或 `OR`：`f0 ∨ ... ∨ fn`"
      },
      "none": {
          "doc": "`[\"none\", f0, ..., fn]` 逻辑非 `NOR`：`¬f0 ∧ ... ∧ ¬fn`"
      },
      "has": {
          "doc": "`[\"has\", key]` `feature[key]` 存在"
      },
      "!has": {
        "doc": "`[\"!has\", key]` `feature[key]` 不存在"
      },
      "within": {
        "doc": "`[\"within\", object]` feature geometry is within object geometry"
      }
    },
    "doc": "过滤操作符。"
  },
  "geometry_type": {
    "type": "enum",
    "values": {
      "Point": {
          "doc": "过滤点状几何要素。"
      },
      "LineString": {
          "doc": "过滤线状几何要素。"
      },
      "Polygon": {
          "doc": "过滤面状几何要素。"
      }
    },
    "doc": "过滤器所要选择的几何要素类型。"
  },
  "function": {
    "expression": {
      "type": "expression",
      "doc": "An expression."
    },
    "stops": {
      "type": "array",
      "doc": "断点数组。",
      "value": "function_stop"
    },
    "base": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "doc": "插值曲线的指数基底。控制断点插值的增长速率。值越大，在靠近上限的一端增长越快。1 表示线性插值。"
    },
    "property": {
      "type": "string",
      "doc": "全局字段或要素字段的名称，用来作为函数的输入。",
      "default": "$zoom"
    },
    "type": {
      "type": "enum",
      "values": {
          "identity": {
              "doc": "函数的输出与输入相同。"
          },
          "exponential": {
              "doc": "函数在断点间插值的结果稍小于和稍大于函数输入。"
          },
          "interval": {
              "doc": "函数输出的断点值稍小于函数输入。"
          },
          "categorical": {
              "doc": "函数输出的断点值等于函数输入。"
          }
      },
      "doc": "函数的插值方法。",
      "default": "exponential"
    },
    "colorSpace": {
      "type": "enum",
      "values": {
        "rgb": {
              "doc": "使用 RGB 色彩空间插值颜色值。"
          },
          "lab": {
              "doc": "使用 LAB 色彩空间插值颜色值。"
          },
          "hcl": {
              "doc": "使用 HCL 色彩空间插值颜色值, 分别单独插值色相、浓度、以及明度。"
          }
      },
      "doc": "色彩插值的颜色空间。在可认知的色彩空间如 LAB 和 HCL 进行颜色插值产生的色彩过渡比在 RGB 空间上插值更为一致和易区分。",
      "default": "rgb"
    },
    "default": {
      "type": "*",
      "required": false,
      "doc": "A value to serve as a fallback function result when a value isn't otherwise available. It is used in the following circumstances:\n* In categorical functions, when the feature value does not match any of the stop domain values.\n* In property and zoom-and-property functions, when a feature does not contain a value for the specified property.\n* In identity functions, when the feature value is not valid for the style property (for example, if the function is being used for a `circle-color` property but the feature property value is not a string or not a valid color).\n* In interval or exponential property and zoom-and-property functions, when the feature value is not numeric.\nIf no default is provided, the style property's default is used in these circumstances."
    }
  },
  "function_stop": {
    "type": "array",
    "minimum": 0,
    "maximum": 24,
    "value": ["number", "color"],
    "length": 2,
    "doc": "缩放级别和值"
  },
  "expression": {
    "type": "array",
    "value": "*",
    "minimum": 1,
    "doc": "An expression defines a function that can be used for data-driven style properties or feature filters."
  },
  "expression_name": {
    "doc": "",
    "type": "enum",
    "values": {
      "let": {
        "doc": "Binds expressions to named variables, which can then be referenced in the result expression using [\"var\", \"variable_name\"].",
        "group": "Variable binding",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "var": {
        "doc": "References variable bound using \"let\".",
        "group": "Variable binding",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "literal": {
        "doc": "Provides a literal array or object value.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "array": {
        "doc": "Asserts that the input is an array (optionally with a specific item type and length).  If, when the input expression is evaluated, it is not of the asserted type, then this assertion will cause the whole expression to be aborted.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "at": {
        "doc": "Retrieves an item from an array.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "in": {
        "doc": "Determines whether an item exists in an array or a substring exists in a string.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "1.6.0",
            "android": "9.1.0",
            "ios": "5.8.0",
            "macos": "0.15.0"
          }
        }
      },
      "index-of": {
        "doc": "Returns the first position at which an item can be found in an array or a substring can be found in a string, or `-1` if the input cannot be found. Accepts an optional index from where to begin the search.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "1.10.0"
          }
        }
      },
      "slice": {
        "doc": "Returns an item from an array or a substring from a string from a specified start index, or between a start index and an end index if set. The return value is inclusive of the start index but not of the end index.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "1.10.0"
          }
        }
      },
      "case": {
        "doc": "Selects the first output whose corresponding test condition evaluates to true, or the fallback value otherwise.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "match": {
        "doc": "Selects the output whose label value matches the input value, or the fallback value if no match is found. The input can be any expression (e.g. `[\"get\", \"building_type\"]`). Each label must be either:\n - a single literal value; or\n - an array of literal values, whose values must be all strings or all numbers (e.g. `[100, 101]` or `[\"c\", \"b\"]`). The input matches if any of the values in the array matches, similar to the `\"in\"` operator.\nEach label must be unique. If the input type does not match the type of the labels, the result will be the fallback value.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "coalesce": {
        "doc": "Evaluates each expression in turn until the first non-null value is obtained, and returns that value.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "step": {
        "doc": "Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`). Stop inputs must be numeric literals in strictly ascending order. Returns the output value of the stop just less than the input, or the first output if the input is less than the first stop.",
        "group": "Ramps, scales, curves",
        "sdk-support": {
          "basic functionality": {
            "js": "0.42.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "interpolate": {
        "doc": "Produces continuous, smooth results by interpolating between pairs of input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`). Stop inputs must be numeric literals in strictly ascending order. The output type must be `number`, `array<number>`, or `color`.\n\nInterpolation types:\n- `[\"linear\"]`: Interpolates linearly between the pair of stops just less than and just greater than the input.\n- `[\"exponential\", base]`: Interpolates exponentially between the stops just less than and just greater than the input. `base` controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.\n- `[\"cubic-bezier\", x1, y1, x2, y2]`: Interpolates using the cubic bezier curve defined by the given control points.",
        "group": "Ramps, scales, curves",
        "sdk-support": {
          "basic functionality": {
            "js": "0.42.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "interpolate-hcl": {
        "doc": "Produces continuous, smooth results by interpolating between pairs of input and output values (\"stops\"). Works like `interpolate`, but the output type must be `color`, and the interpolation is performed in the Hue-Chroma-Luminance color space.",
        "group": "Ramps, scales, curves",
        "sdk-support": {
          "basic functionality": {
            "js": "0.49.0"
          }
        }
      },
      "interpolate-lab": {
        "doc": "Produces continuous, smooth results by interpolating between pairs of input and output values (\"stops\"). Works like `interpolate`, but the output type must be `color`, and the interpolation is performed in the CIELAB color space.",
        "group": "Ramps, scales, curves",
        "sdk-support": {
          "basic functionality": {
            "js": "0.49.0"
          }
        }
      },
      "ln2": {
        "doc": "Returns mathematical constant ln(2).",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "pi": {
        "doc": "Returns the mathematical constant pi.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "e": {
        "doc": "Returns the mathematical constant e.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "typeof": {
        "doc": "Returns a string describing the type of the given value.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "string": {
        "doc": "Asserts that the input value is a string. If multiple values are provided, each one is evaluated in order until a string is obtained. If none of the inputs are strings, the expression is an error.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "number": {
        "doc": "Asserts that the input value is a number. If multiple values are provided, each one is evaluated in order until a number is obtained. If none of the inputs are numbers, the expression is an error.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "boolean": {
        "doc": "Asserts that the input value is a boolean. If multiple values are provided, each one is evaluated in order until a boolean is obtained. If none of the inputs are booleans, the expression is an error.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "object": {
        "doc": "Asserts that the input value is an object. If multiple values are provided, each one is evaluated in order until an object is obtained. If none of the inputs are objects, the expression is an error.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "collator": {
        "doc": "Returns a `collator` for use in locale-dependent comparison operations. The `case-sensitive` and `diacritic-sensitive` options default to `false`. The `locale` argument specifies the IETF language tag of the locale to use. If none is provided, the default locale is used. If the requested locale is not available, the `collator` will use a system-defined fallback locale. Use `resolved-locale` to test the results of locale fallback behavior.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      "format": {
        "doc": "Returns a `formatted` string for displaying mixed-format text in the `text-field` property. The input may contain a string literal or expression, including an [`'image'`](#types-image) expression. Strings may be followed by a style override object that supports the following properties:\n- `\"text-font\"`: Overrides the font stack specified by the root layout property.\n- `\"text-color\"`: Overrides the color specified by the root paint property.\n- `\"font-scale\"`: Applies a scaling factor on `text-size` as specified by the root layout property.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.48.0",
            "android": "6.7.0",
            "ios": "4.6.0",
            "macos": "0.12.0"
          },
          "text-font": {
            "js": "0.48.0",
            "android": "6.7.0",
            "ios": "4.6.0",
            "macos": "0.12.0"
          },
          "font-scale": {
            "js": "0.48.0",
            "android": "6.7.0",
            "ios": "4.6.0",
            "macos": "0.12.0"
          },
          "text-color": {
            "js": "1.3.0",
            "android": "7.3.0",
            "ios": "4.10.0",
            "macos": "0.14.0"
          },
          "image": {
            "js": "1.6.0",
            "android": "8.6.0",
            "ios": "5.7.0",
            "macos": "0.15.0"
          }
        }
      },
      "image": {
        "doc": "Returns an `image` type for use in `icon-image`, `*-pattern` entries and as a section in the `format` expression. If set, the `image` argument will check that the requested image exists in the style and will return either the resolved image name or `null`, depending on whether or not the image is currently in the style. This validation process is synchronous and requires the image to have been added to the style before requesting it in the `image` argument.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "1.4.0",
            "android": "8.6.0",
            "ios": "5.7.0",
            "macos": "0.15.0"
          }
        }
      },
      "number-format": {
        "doc": "Converts the input number into a string representation using the providing formatting rules. If set, the `locale` argument specifies the locale to use, as a BCP 47 language tag. If set, the `currency` argument specifies an ISO 4217 code to use for currency-style formatting. If set, the `min-fraction-digits` and `max-fraction-digits` arguments specify the minimum and maximum number of fractional digits to include.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.54.0"
          }
        }
      },
      "to-string": {
        "doc": "Converts the input value to a string. If the input is `null`, the result is `\"\"`. If the input is a boolean, the result is `\"true\"` or `\"false\"`. If the input is a number, it is converted to a string as specified by the [\"NumberToString\" algorithm](https://tc39.github.io/ecma262/#sec-tostring-applied-to-the-number-type) of the ECMAScript Language Specification. If the input is a color, it is converted to a string of the form `\"rgba(r,g,b,a)\"`, where `r`, `g`, and `b` are numerals ranging from 0 to 255, and `a` ranges from 0 to 1. Otherwise, the input is converted to a string in the format specified by the [`JSON.stringify`](https://tc39.github.io/ecma262/#sec-json.stringify) function of the ECMAScript Language Specification.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "to-number": {
        "doc": "Converts the input value to a number, if possible. If the input is `null` or `false`, the result is 0. If the input is `true`, the result is 1. If the input is a string, it is converted to a number as specified by the [\"ToNumber Applied to the String Type\" algorithm](https://tc39.github.io/ecma262/#sec-tonumber-applied-to-the-string-type) of the ECMAScript Language Specification. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "to-boolean": {
        "doc": "Converts the input value to a boolean. The result is `false` when then input is an empty string, 0, `false`, `null`, or `NaN`; otherwise it is `true`.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "to-rgba": {
        "doc": "Returns a four-element array containing the input color's red, green, blue, and alpha components, in that order.",
        "group": "Color",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "to-color": {
        "doc": "Converts the input value to a color. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.",
        "group": "Types",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "rgb": {
        "doc": "Creates a color value from red, green, and blue components, which must range between 0 and 255, and an alpha component of 1. If any component is out of range, the expression is an error.",
        "group": "Color",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "rgba": {
        "doc": "Creates a color value from red, green, blue components, which must range between 0 and 255, and an alpha component which must range between 0 and 1. If any component is out of range, the expression is an error.",
        "group": "Color",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "get": {
        "doc": "Retrieves a property value from the current feature's properties, or from another object if a second argument is provided. Returns null if the requested property is missing.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "has": {
        "doc": "Tests for the presence of an property value in the current feature's properties, or from another object if a second argument is provided.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "length": {
        "doc": "Gets the length of an array or string.",
        "group": "Lookup",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "properties": {
        "doc": "Gets the feature properties object.  Note that in some cases, it may be more efficient to use [\"get\", \"property_name\"] directly.",
        "group": "Feature data",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "feature-state": {
        "doc": "Retrieves a property value from the current feature's state. Returns null if the requested property is not present on the feature's state. A feature's state is not part of the GeoJSON or vector tile data, and must be set programmatically on each feature. Features are identified by their `id` attribute, which must be an integer or a string that can be cast to an integer. Note that [\"feature-state\"] can only be used with paint properties that support data-driven styling.",
        "group": "Feature data",
        "sdk-support": {
          "basic functionality": {
            "js": "0.46.0"
          }
        }
      },
      "geometry-type": {
        "doc": "Gets the feature's geometry type: `Point`, `MultiPoint`, `LineString`, `MultiLineString`, `Polygon`, `MultiPolygon`.",
        "group": "Feature data",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "id": {
        "doc": "Gets the feature's id, if it has one.",
        "group": "Feature data",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "zoom": {
        "doc": "Gets the current zoom level.  Note that in style layout and paint properties, [\"zoom\"] may only appear as the input to a top-level \"step\" or \"interpolate\" expression.",
        "group": "Zoom",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "heatmap-density": {
        "doc": "Gets the kernel density estimation of a pixel in a heatmap layer, which is a relative measure of how many data points are crowded around a particular pixel. Can only be used in the `heatmap-color` property.",
        "group": "Heatmap",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "line-progress": {
        "doc": "Gets the progress along a gradient line. Can only be used in the `line-gradient` property.",
        "group": "Feature data",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.6.0",
            "macos": "0.12.0"
          }
        }
      },
      "accumulated": {
        "doc": "Gets the value of a cluster property accumulated so far. Can only be used in the `clusterProperties` option of a clustered GeoJSON source.",
        "group": "Feature data",
        "sdk-support": {
          "basic functionality": {
            "js": "0.53.0"
          }
        }
      },
      "+": {
        "doc": "Returns the sum of the inputs.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "*": {
        "doc": "Returns the product of the inputs.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "-": {
        "doc": "For two inputs, returns the result of subtracting the second input from the first. For a single input, returns the result of subtracting it from 0.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "/": {
        "doc": "Returns the result of floating point division of the first input by the second.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "%": {
        "doc": "Returns the remainder after integer division of the first input by the second.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "^": {
        "doc": "Returns the result of raising the first input to the power specified by the second.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "sqrt": {
        "doc": "Returns the square root of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.42.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "log10": {
        "doc": "Returns the base-ten logarithm of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "ln": {
        "doc": "Returns the natural logarithm of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "log2": {
        "doc": "Returns the base-two logarithm of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "sin": {
        "doc": "Returns the sine of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "cos": {
        "doc": "Returns the cosine of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "tan": {
        "doc": "Returns the tangent of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "asin": {
        "doc": "Returns the arcsine of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "acos": {
        "doc": "Returns the arccosine of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "atan": {
        "doc": "Returns the arctangent of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "min": {
        "doc": "Returns the minimum value of the inputs.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "max": {
        "doc": "Returns the maximum value of the inputs.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "round": {
        "doc": "Rounds the input to the nearest integer. Halfway values are rounded away from zero. For example, `[\"round\", -1.5]` evaluates to -2.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "abs": {
        "doc": "Returns the absolute value of the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "ceil": {
        "doc": "Returns the smallest integer that is greater than or equal to the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "floor": {
        "doc": "Returns the largest integer that is less than or equal to the input.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "distance": {
        "doc": "Returns the shortest distance in meters between the evaluated feature and the input geometry. The input value can be a valid GeoJSON of type `Point`, `MultiPoint`, `LineString`, `MultiLineString`, `Polygon`, `MultiPolygon`, `Feature`, or `FeatureCollection`. Distance values returned may vary in precision due to loss in precision from encoding geometries, particularly below zoom level 13.",
        "group": "Math",
        "sdk-support": {
          "basic functionality": {
            "android": "9.2.0",
            "ios": "5.9.0",
            "macos": "0.16.0"
          }
        }
      },
      "==": {
        "doc": "Returns `true` if the input values are equal, `false` otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          },
          "collator": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      "!=": {
        "doc": "Returns `true` if the input values are not equal, `false` otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          },
          "collator": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      ">": {
        "doc": "Returns `true` if the first input is strictly greater than the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          },
          "collator": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      "<": {
        "doc": "Returns `true` if the first input is strictly less than the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          },
          "collator": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      ">=": {
        "doc": "Returns `true` if the first input is greater than or equal to the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          },
          "collator": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      "<=": {
        "doc": "Returns `true` if the first input is less than or equal to the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          },
          "collator": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      },
      "all": {
        "doc": "Returns `true` if all the inputs are `true`, `false` otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to `false`, the result is `false` and no further input expressions are evaluated.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "any": {
        "doc": "Returns `true` if any of the inputs are `true`, `false` otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to `true`, the result is `true` and no further input expressions are evaluated.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "!": {
        "doc": "Logical negation. Returns `true` if the input is `false`, and `false` if the input is `true`.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "within": {
        "doc": "Returns `true` if the evaluated feature is fully contained inside a boundary of the input geometry, `false` otherwise. The input value can be a valid GeoJSON of type `Polygon`, `MultiPolygon`, `Feature`, or `FeatureCollection`. Supported features for evaluation:\n- `Point`: Returns `false` if a point is on the boundary or falls outside the boundary.\n- `LineString`: Returns `false` if any part of a line falls outside the boundary, the line intersects the boundary, or a line's endpoint is on the boundary.",
        "group": "Decision",
        "sdk-support": {
          "basic functionality": {
            "js": "1.9.0",
            "android": "9.1.0",
            "ios": "5.8.0",
            "macos": "0.15.0"
          }
        }
      },
      "is-supported-script": {
        "doc": "Returns `true` if the input string is expected to render legibly. Returns `false` if the input string contains sections that cannot be rendered without potential loss of meaning (e.g. Indic scripts that require complex text shaping, or right-to-left scripts if the the `mapbox-gl-rtl-text` plugin is not in use in Mapbox GL JS).",
        "group": "String",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.6.0"
          }
        }
      },
      "upcase": {
        "doc": "Returns the input string converted to uppercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.",
        "group": "String",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "downcase": {
        "doc": "Returns the input string converted to lowercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.",
        "group": "String",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "concat": {
        "doc": "Returns a `string` consisting of the concatenation of the inputs. Each input is converted to a string as if by `to-string`.",
        "group": "String",
        "sdk-support": {
          "basic functionality": {
            "js": "0.41.0",
            "android": "6.0.0",
            "ios": "4.0.0",
            "macos": "0.7.0"
          }
        }
      },
      "resolved-locale": {
        "doc": "Returns the IETF language tag of the locale being used by the provided `collator`. This can be used to determine the default system locale, or to determine if a requested locale was successfully loaded.",
        "group": "String",
        "sdk-support": {
          "basic functionality": {
            "js": "0.45.0",
            "android": "6.5.0",
            "ios": "4.2.0",
            "macos": "0.9.0"
          }
        }
      }
    }
  },
  "light": {
    "anchor": {
      "type": "enum",
      "default": "viewport",
      "values": {
        "map": {
          "doc": "The position of the light source is aligned to the rotation of the map."
        },
        "viewport": {
          "doc": "The position of the light source is aligned to the rotation of the viewport."
        }
      },
      "property-type": "data-constant",
      "transition": false,
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "doc": "Whether extruded geometries are lit relative to the map or viewport.",
      "example": "map",
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      }
    },
    "position": {
      "type": "array",
      "default": [1.15, 210, 30],
      "length": 3,
      "value": "number",
      "property-type": "data-constant",
      "transition": true,
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "doc": "Position of the light source relative to lit (extruded) geometries, in [r radial coordinate, a azimuthal angle, p polar angle] where r indicates the distance from the center of the base of an object to its light, a indicates the position of the light relative to 0° (0° when `light.anchor` is set to `viewport` corresponds to the top of the viewport, or 0° when `light.anchor` is set to `map` corresponds to due north, and degrees proceed clockwise), and p indicates the height of the light (from 0°, directly above, to 180°, directly below).",
      "example": [1.5, 90, 80],
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      }
    },
    "color": {
      "type": "color",
      "property-type": "data-constant",
      "default": "#ffffff",
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "transition": true,
      "doc": "Color tint for lighting extruded geometries.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      }
    },
    "intensity": {
      "type": "number",
      "property-type": "data-constant",
      "default": 0.5,
      "minimum": 0,
      "maximum": 1,
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "transition": true,
      "doc": "Intensity of lighting (on a scale from 0 to 1). Higher numbers will present as more extreme contrast.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      }
    }
  },
  "paint": [
    "paint_fill",
    "paint_line",
    "paint_circle",
    "paint_heatmap",
    "paint_fill-extrusion",
    "paint_symbol",
    "paint_raster",
    "paint_hillshade",
    "paint_background"
  ],
  "paint_fill": {
    "fill-antialias": {
      "type": "boolean",
      "default": true,
      "doc": "Whether or not the fill should be antialiased.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "fill-opacity": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "doc": "The opacity of the entire fill layer. In contrast to the `fill-color`, this value will also affect the 1px stroke around the fill, if the stroke is used.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.21.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The color of the filled part of this layer. This color can be specified as `rgba` with an alpha component and the color's opacity will not affect the opacity of the 1px stroke, if it is used.",
      "transition": true,
      "requires": [
        {
          "!": "fill-pattern"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.19.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-water": {
      "type": "enum",
      "default": "none",
      "doc": "The color of the filled part of this layer. This color can be specified as `rgba` with an alpha component and the color's opacity will not affect the opacity of the 1px stroke, if it is used.",
      "transition": true,
      "requires": [
        {
          "!": "fill-pattern"
        }
      ],
      "values": {
        "water": {
          "doc": ""
        },
        "none": {
          "doc": ""
        }
      },
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.19.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-outline-color": {
      "type": "color",
      "doc": "The outline color of the fill. Matches the value of `fill-color` if unspecified.",
      "transition": true,
      "requires": [
        {
          "!": "fill-pattern"
        },
        {
          "fill-antialias": true
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.19.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-translate": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "transition": true,
      "units": "pixels",
      "doc": "The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "fill-translate-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The fill is translated relative to the map."
        },
        "viewport": {
          "doc": "The fill is translated relative to the viewport."
        }
      },
      "doc": "Controls the frame of reference for `fill-translate`.",
      "default": "map",
      "requires": ["fill-translate"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "fill-pattern": {
      "type": "resolvedImage",
      "transition": true,
      "doc": "Name of image in sprite to use for drawing image fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.49.0",
          "android": "6.5.0",
          "macos": "0.11.0",
          "ios": "4.4.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "cross-faded-data-driven"
    }
  },
  "paint_fill-extrusion": {
    "fill-extrusion-opacity": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "doc": "The opacity of the entire fill extrusion layer. This is rendered on a per-layer, not per-feature, basis, and data-driven styling is not available.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "fill-extrusion-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The base color of the extruded fill. The extrusion's surfaces will be shaded differently based on this color in combination with the root `light` settings. If this color is specified as `rgba` with an alpha component, the alpha component will be ignored; use `fill-extrusion-opacity` to set layer opacity.",
      "transition": true,
      "requires": [
        {
          "!": "fill-extrusion-pattern"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        },
        "data-driven styling": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-extrusion-translate": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "transition": true,
      "units": "pixels",
      "doc": "The geometry's offset. Values are [x, y] where negatives indicate left and up (on the flat plane), respectively.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "fill-extrusion-translate-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The fill extrusion is translated relative to the map."
        },
        "viewport": {
          "doc": "The fill extrusion is translated relative to the viewport."
        }
      },
      "doc": "Controls the frame of reference for `fill-extrusion-translate`.",
      "default": "map",
      "requires": ["fill-extrusion-translate"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "fill-extrusion-pattern": {
      "type": "resolvedImage",
      "transition": true,
      "doc": "Name of image in sprite to use for drawing images on extruded fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        },
        "data-driven styling": {
          "js": "0.49.0",
          "android": "6.5.0",
          "macos": "0.11.0",
          "ios": "4.4.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "cross-faded-data-driven"
    },
    "fill-extrusion-height": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "units": "meters",
      "doc": "The height with which to extrude this layer.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        },
        "data-driven styling": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-extrusion-intensity": {
      "type": "number",
      "default": 1,
      "transition": true,
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-extrusion-bottom-color": {
      "type": "color",
      "default": "#000000",
      "transition": true,
      "requires": [{ "!": "fill-extrusion-pattern" }],
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-extrusion-pattern-repeat": {
      "type": "boolean",
      "default": true,
      "transition": false,
      "expression": { "interpolated": false, "parameters": ["zoom"] },
      "property-type": "data-constant"
    },
    "fill-extrusion-base": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "units": "meters",
      "doc": "The height with which to extrude the base of this layer. Must be less than or equal to `fill-extrusion-height`.",
      "transition": true,
      "requires": ["fill-extrusion-height"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        },
        "data-driven styling": {
          "js": "0.27.0",
          "android": "5.1.0",
          "ios": "3.6.0",
          "macos": "0.5.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "fill-extrusion-vertical-gradient": {
      "type": "boolean",
      "default": true,
      "doc": "Whether to apply a vertical gradient to the sides of a fill-extrusion layer. If true, sides will be shaded slightly darker farther down.",
      "transition": false,
      "sdk-support": {
        "basic functionality": {
          "js": "0.50.0",
          "ios": "4.7.0",
          "macos": "0.13.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    }
  },
  "paint_line": {
    "line-opacity": {
      "type": "number",
      "doc": "The opacity at which the line will be drawn.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "line-color": {
      "type": "color",
      "doc": "The color with which the line will be drawn.",
      "default": "#000000",
      "transition": true,
      "requires": [
        {
          "!": "line-pattern"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.23.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "line-translate": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "transition": true,
      "units": "pixels",
      "doc": "The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "line-translate-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The line is translated relative to the map."
        },
        "viewport": {
          "doc": "The line is translated relative to the viewport."
        }
      },
      "doc": "Controls the frame of reference for `line-translate`.",
      "default": "map",
      "requires": ["line-translate"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "line-width": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "Stroke thickness.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.39.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "line-gap-width": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "doc": "Draws a line casing outside of a line's actual path. Value indicates the width of the inner gap.",
      "transition": true,
      "units": "pixels",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "line-offset": {
      "type": "number",
      "default": 0,
      "doc": "The line's offset. For linear features, a positive value offsets the line to the right, relative to the direction of the line, and a negative value to the left. For polygon features, a positive value results in an inset, and a negative value results in an outset.",
      "transition": true,
      "units": "pixels",
      "sdk-support": {
        "basic functionality": {
          "js": "0.12.1",
          "android": "3.0.0",
          "ios": "3.1.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "line-blur": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "Blur applied to the line, in pixels.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "line-dasharray": {
      "type": "array",
      "value": "number",
      "doc": "Specifies the lengths of the alternating dashes and gaps that form the dash pattern. The lengths are later scaled by the line width. To convert a dash length to pixels, multiply the length by the current line width. Note that GeoJSON sources with `lineMetrics: true` specified won't render dashed lines to the expected scale. Also note that zoom-dependent expressions will be evaluated only at integer zoom levels.",
      "minimum": 0,
      "transition": true,
      "units": "line widths",
      "requires": [
        {
          "!": "line-pattern"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {}
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "cross-faded"
    },
    "line-pattern": {
      "type": "resolvedImage",
      "transition": true,
      "doc": "Name of image in sprite to use for drawing image lines. For seamless patterns, image width must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.49.0",
          "android": "6.5.0",
          "macos": "0.11.0",
          "ios": "4.4.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom", "feature"]
      },
      "property-type": "cross-faded-data-driven"
    },
    "line-gradient": {
      "type": "color",
      "doc": "Defines a gradient with which to color a line feature. Can only be used with GeoJSON sources that specify `\"lineMetrics\": true`.",
      "transition": false,
      "requires": [
        {
          "!": "line-dasharray"
        },
        {
          "!": "line-pattern"
        },
        {
          "source": "geojson",
          "has": {
            "lineMetrics": true
          }
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.45.0",
          "android": "6.5.0",
          "ios": "4.4.0",
          "macos": "0.11.0"
        },
        "data-driven styling": {}
      },
      "expression": {
        "interpolated": true,
        "parameters": ["line-progress"]
      },
      "property-type": "color-ramp"
    }
  },
  "paint_circle": {
    "circle-radius": {
      "type": "number",
      "default": 5,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "Circle radius.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.18.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "circle-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The fill color of the circle.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.18.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "circle-blur": {
      "type": "number",
      "default": 0,
      "doc": "Amount to blur the circle. 1 blurs the circle such that only the centerpoint is full opacity.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.20.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "circle-opacity": {
      "type": "number",
      "doc": "The opacity at which the circle will be drawn.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.20.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "circle-translate": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "transition": true,
      "units": "pixels",
      "doc": "The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "circle-translate-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The circle is translated relative to the map."
        },
        "viewport": {
          "doc": "The circle is translated relative to the viewport."
        }
      },
      "doc": "Controls the frame of reference for `circle-translate`.",
      "default": "map",
      "requires": ["circle-translate"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "circle-pitch-scale": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "Circles are scaled according to their apparent distance to the camera."
        },
        "viewport": {
          "doc": "Circles are not scaled."
        }
      },
      "default": "map",
      "doc": "Controls the scaling behavior of the circle when the map is pitched.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.21.0",
          "android": "4.2.0",
          "ios": "3.4.0",
          "macos": "0.2.1"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "circle-pitch-alignment": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The circle is aligned to the plane of the map."
        },
        "viewport": {
          "doc": "The circle is aligned to the plane of the viewport."
        }
      },
      "default": "viewport",
      "doc": "Orientation of circle when map is pitched.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.39.0",
          "android": "5.2.0",
          "ios": "3.7.0",
          "macos": "0.6.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "circle-stroke-width": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "The width of the circle's stroke. Strokes are placed outside of the `circle-radius`.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "circle-stroke-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The stroke color of the circle.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "circle-stroke-opacity": {
      "type": "number",
      "doc": "The opacity of the circle's stroke.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        },
        "data-driven styling": {
          "js": "0.29.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    }
  },
  "paint_heatmap": {
    "heatmap-radius": {
      "type": "number",
      "default": 30,
      "minimum": 1,
      "transition": true,
      "units": "pixels",
      "doc": "Radius of influence of one heatmap point in pixels. Increasing the value makes the heatmap smoother, but less detailed.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        },
        "data-driven styling": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "heatmap-weight": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "transition": false,
      "doc": "A measure of how much an individual point contributes to the heatmap. A value of 10 would be equivalent to having 10 points of weight 1 in the same spot. Especially useful when combined with clustering.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        },
        "data-driven styling": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "heatmap-intensity": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "transition": true,
      "doc": "Similar to `heatmap-weight` but controls the intensity of the heatmap globally. Primarily used for adjusting the heatmap based on zoom level.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "heatmap-color": {
      "type": "color",
      "default": [
        "interpolate",
        ["linear"],
        ["heatmap-density"],
        0,
        "rgba(0, 0, 255, 0)",
        0.1,
        "royalblue",
        0.3,
        "cyan",
        0.5,
        "lime",
        0.7,
        "yellow",
        1,
        "red"
      ],
      "doc": "Defines the color of each pixel based on its density value in a heatmap.  Should be an expression that uses `[\"heatmap-density\"]` as input.",
      "transition": false,
      "sdk-support": {
        "basic functionality": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        },
        "data-driven styling": {}
      },
      "expression": {
        "interpolated": true,
        "parameters": ["heatmap-density"]
      },
      "property-type": "color-ramp"
    },
    "heatmap-opacity": {
      "type": "number",
      "doc": "The global opacity at which the heatmap layer will be drawn.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.41.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    }
  },
  "paint_symbol": {
    "icon-opacity": {
      "doc": "The opacity at which the icon will be drawn.",
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "icon-color": {
      "type": "color",
      "default": "#000000",
      "transition": true,
      "doc": "The color of the icon. This can only be used with sdf icons.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "icon-halo-color": {
      "type": "color",
      "default": "rgba(0, 0, 0, 0)",
      "transition": true,
      "doc": "The color of the icon's halo. Icon halos can only be used with SDF icons.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "icon-halo-width": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "Distance of halo to the icon outline.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "icon-halo-blur": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "Fade out the halo towards the outside.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "icon-translate": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "transition": true,
      "units": "pixels",
      "doc": "Distance that the icon's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.",
      "requires": ["icon-image"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "icon-translate-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "Icons are translated relative to the map."
        },
        "viewport": {
          "doc": "Icons are translated relative to the viewport."
        }
      },
      "doc": "Controls the frame of reference for `icon-translate`.",
      "default": "map",
      "requires": ["icon-image", "icon-translate"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-opacity": {
      "type": "number",
      "doc": "The opacity at which the text will be drawn.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "text-color": {
      "type": "color",
      "doc": "The color with which the text will be drawn.",
      "default": "#000000",
      "transition": true,
      "overridable": true,
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "text-halo-color": {
      "type": "color",
      "default": "rgba(0, 0, 0, 0)",
      "transition": true,
      "doc": "The color of the text's halo, which helps it stand out from backgrounds.",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "text-halo-width": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "Distance of halo to the font outline. Max text halo width is 1/4 of the font-size.",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "text-halo-blur": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "transition": true,
      "units": "pixels",
      "doc": "The halo's fadeout distance towards the outside.",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {
          "js": "0.33.0",
          "android": "5.0.0",
          "ios": "3.5.0",
          "macos": "0.4.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom", "feature", "feature-state"]
      },
      "property-type": "data-driven"
    },
    "text-translate": {
      "type": "array",
      "value": "number",
      "length": 2,
      "default": [0, 0],
      "transition": true,
      "units": "pixels",
      "doc": "Distance that the text's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.",
      "requires": ["text-field"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "text-translate-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The text is translated relative to the map."
        },
        "viewport": {
          "doc": "The text is translated relative to the viewport."
        }
      },
      "doc": "Controls the frame of reference for `text-translate`.",
      "default": "map",
      "requires": ["text-field", "text-translate"],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    }
  },
  "paint_raster": {
    "raster-opacity": {
      "type": "number",
      "doc": "The opacity at which the image will be drawn.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-hue-rotate": {
      "type": "number",
      "default": 0,
      "period": 360,
      "transition": true,
      "units": "degrees",
      "doc": "Rotates hues around the color wheel.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-brightness-min": {
      "type": "number",
      "doc": "Increase or reduce the brightness of the image. The value is the minimum brightness.",
      "default": 0,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-brightness-max": {
      "type": "number",
      "doc": "Increase or reduce the brightness of the image. The value is the maximum brightness.",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-saturation": {
      "type": "number",
      "doc": "Increase or reduce the saturation of the image.",
      "default": 0,
      "minimum": -1,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-contrast": {
      "type": "number",
      "doc": "Increase or reduce the contrast of the image.",
      "default": 0,
      "minimum": -1,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-resampling": {
      "type": "enum",
      "doc": "The resampling/interpolation method to use for overscaling, also known as texture magnification filter",
      "values": {
        "linear": {
          "doc": "(Bi)linear filtering interpolates pixel values using the weighted average of the four closest original source pixels creating a smooth but blurry look when overscaled"
        },
        "nearest": {
          "doc": "Nearest neighbor filtering interpolates pixel values using the nearest original source pixel creating a sharp but pixelated look when overscaled"
        }
      },
      "default": "linear",
      "sdk-support": {
        "basic functionality": {
          "js": "0.47.0",
          "android": "6.3.0",
          "ios": "4.2.0",
          "macos": "0.9.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "raster-fade-duration": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "transition": false,
      "units": "milliseconds",
      "doc": "Fade duration when a new tile is added.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    }
  },
  "paint_hillshade": {
    "hillshade-illumination-direction": {
      "type": "number",
      "default": 335,
      "minimum": 0,
      "maximum": 359,
      "doc": "The direction of the light source used to generate the hillshading with 0 as the top of the viewport if `hillshade-illumination-anchor` is set to `viewport` and due north if `hillshade-illumination-anchor` is set to `map`.",
      "transition": false,
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "hillshade-illumination-anchor": {
      "type": "enum",
      "values": {
        "map": {
          "doc": "The hillshade illumination is relative to the north direction."
        },
        "viewport": {
          "doc": "The hillshade illumination is relative to the top of the viewport."
        }
      },
      "default": "viewport",
      "doc": "Direction of light source when map is rotated.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "hillshade-exaggeration": {
      "type": "number",
      "doc": "Intensity of the hillshade",
      "default": 0.5,
      "minimum": 0,
      "maximum": 1,
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "hillshade-shadow-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The shading color of areas that face away from the light source.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "hillshade-highlight-color": {
      "type": "color",
      "default": "#FFFFFF",
      "doc": "The shading color of areas that faces towards the light source.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "hillshade-accent-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The shading color used to accentuate rugged terrain like sharp cliffs and gorges.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.43.0",
          "android": "6.0.0",
          "ios": "4.0.0",
          "macos": "0.7.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    }
  },
  "paint_background": {
    "background-color": {
      "type": "color",
      "default": "#000000",
      "doc": "The color with which the background will be drawn.",
      "transition": true,
      "requires": [
        {
          "!": "background-pattern"
        }
      ],
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    },
    "background-pattern": {
      "type": "resolvedImage",
      "transition": true,
      "doc": "Name of image in sprite to use for drawing an image background. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.",
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        },
        "data-driven styling": {}
      },
      "expression": {
        "interpolated": false,
        "parameters": ["zoom"]
      },
      "property-type": "cross-faded"
    },
    "background-opacity": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "doc": "The opacity at which the background will be drawn.",
      "transition": true,
      "sdk-support": {
        "basic functionality": {
          "js": "0.10.0",
          "android": "2.0.1",
          "ios": "2.0.0",
          "macos": "0.1.0"
        }
      },
      "expression": {
        "interpolated": true,
        "parameters": ["zoom"]
      },
      "property-type": "data-constant"
    }
  },
  "transition": {
    "duration": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "units": "milliseconds",
      "doc": "Time allotted for transitions to complete."
    },
    "delay": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "units": "milliseconds",
      "doc": "Length of time before a transition begins."
    }
  },
  "property-type": {
    "data-driven": {
      "type": "property-type",
      "doc": "Property is interpolable and can be represented using a property expression."
    },
    "cross-faded": {
      "type": "property-type",
      "doc": "Property is non-interpolable; rather, its values will be cross-faded to smoothly transition between integer zooms."
    },
    "cross-faded-data-driven": {
      "type": "property-type",
      "doc": "Property is non-interpolable; rather, its values will be cross-faded to smoothly transition between integer zooms. It can be represented using a property expression."
    },
    "color-ramp": {
      "type": "property-type",
      "doc": "Property should be specified using a color ramp from which the output color can be sampled based on a property calculation."
    },
    "data-constant": {
      "type": "property-type",
      "doc": "Property is interpolable but cannot be represented using a property expression."
    },
    "constant": {
      "type": "property-type",
      "doc": "Property is constant across all zoom levels and property values."
    }
  },
  "promoteId": {
    "*": {
      "type": "string",
      "doc": "A name of a feature property to use as ID for feature state."
    }
  }
}
